// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* Test_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Test_reflection_ = NULL;
const ::google::protobuf::Descriptor* Test_Staff_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Test_Staff_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_test_2eproto() {
  protobuf_AddDesc_test_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "test.proto");
  GOOGLE_CHECK(file != NULL);
  Test_descriptor_ = file->message_type(0);
  static const int Test_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Test, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Test, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Test, propertyvalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Test, staffarray_),
  };
  Test_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Test_descriptor_,
      Test::default_instance_,
      Test_offsets_,
      -1,
      -1,
      -1,
      sizeof(Test),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Test, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Test, _is_default_instance_));
  Test_Staff_descriptor_ = Test_descriptor_->nested_type(0);
  static const int Test_Staff_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Test_Staff, staffid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Test_Staff, staffname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Test_Staff, stafflevel_),
  };
  Test_Staff_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Test_Staff_descriptor_,
      Test_Staff::default_instance_,
      Test_Staff_offsets_,
      -1,
      -1,
      -1,
      sizeof(Test_Staff),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Test_Staff, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Test_Staff, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_test_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Test_descriptor_, &Test::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Test_Staff_descriptor_, &Test_Staff::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_test_2eproto() {
  delete Test::default_instance_;
  delete Test_reflection_;
  delete Test_Staff::default_instance_;
  delete Test_Staff_reflection_;
}

void protobuf_AddDesc_test_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ntest.proto\022\017google.protobuf\"\252\001\n\004Test\022\014"
    "\n\004name\030\001 \001(\t\022\n\n\002id\030\002 \001(\005\022\026\n\016propertyvalu"
    "es\030\003 \003(\t\022/\n\nStaffArray\030\004 \003(\0132\033.google.pr"
    "otobuf.Test.Staff\032\?\n\005Staff\022\017\n\007staffid\030\001 "
    "\001(\005\022\021\n\tstaffname\030\002 \001(\t\022\022\n\nstafflevel\030\003 \001"
    "(\005b\006proto3", 210);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test.proto", &protobuf_RegisterTypes);
  Test::default_instance_ = new Test();
  Test_Staff::default_instance_ = new Test_Staff();
  Test::default_instance_->InitAsDefaultInstance();
  Test_Staff::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_test_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_test_2eproto {
  StaticDescriptorInitializer_test_2eproto() {
    protobuf_AddDesc_test_2eproto();
  }
} static_descriptor_initializer_test_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int Test_Staff::kStaffidFieldNumber;
const int Test_Staff::kStaffnameFieldNumber;
const int Test_Staff::kStafflevelFieldNumber;
#endif  // !_MSC_VER

Test_Staff::Test_Staff()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.Test.Staff)
}

void Test_Staff::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Test_Staff::Test_Staff(const Test_Staff& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.Test.Staff)
}

void Test_Staff::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  staffid_ = 0;
  staffname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stafflevel_ = 0;
}

Test_Staff::~Test_Staff() {
  // @@protoc_insertion_point(destructor:google.protobuf.Test.Staff)
  SharedDtor();
}

void Test_Staff::SharedDtor() {
  staffname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Test_Staff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Test_Staff::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Test_Staff_descriptor_;
}

const Test_Staff& Test_Staff::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Test_Staff* Test_Staff::default_instance_ = NULL;

Test_Staff* Test_Staff::New(::google::protobuf::Arena* arena) const {
  Test_Staff* n = new Test_Staff;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Test_Staff::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Test_Staff*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(staffid_, stafflevel_);
  staffname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Test_Staff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.Test.Staff)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 staffid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &staffid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_staffname;
        break;
      }

      // optional string staffname = 2;
      case 2: {
        if (tag == 18) {
         parse_staffname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_staffname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->staffname().data(), this->staffname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "google.protobuf.Test.Staff.staffname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_stafflevel;
        break;
      }

      // optional int32 stafflevel = 3;
      case 3: {
        if (tag == 24) {
         parse_stafflevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stafflevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.Test.Staff)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.Test.Staff)
  return false;
#undef DO_
}

void Test_Staff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.Test.Staff)
  // optional int32 staffid = 1;
  if (this->staffid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->staffid(), output);
  }

  // optional string staffname = 2;
  if (this->staffname().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->staffname().data(), this->staffname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.Test.Staff.staffname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->staffname(), output);
  }

  // optional int32 stafflevel = 3;
  if (this->stafflevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->stafflevel(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.protobuf.Test.Staff)
}

::google::protobuf::uint8* Test_Staff::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.Test.Staff)
  // optional int32 staffid = 1;
  if (this->staffid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->staffid(), target);
  }

  // optional string staffname = 2;
  if (this->staffname().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->staffname().data(), this->staffname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.Test.Staff.staffname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->staffname(), target);
  }

  // optional int32 stafflevel = 3;
  if (this->stafflevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->stafflevel(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.Test.Staff)
  return target;
}

int Test_Staff::ByteSize() const {
  int total_size = 0;

  // optional int32 staffid = 1;
  if (this->staffid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->staffid());
  }

  // optional string staffname = 2;
  if (this->staffname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->staffname());
  }

  // optional int32 stafflevel = 3;
  if (this->stafflevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stafflevel());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Test_Staff::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Test_Staff* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Test_Staff*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Test_Staff::MergeFrom(const Test_Staff& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.staffid() != 0) {
    set_staffid(from.staffid());
  }
  if (from.staffname().size() > 0) {

    staffname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.staffname_);
  }
  if (from.stafflevel() != 0) {
    set_stafflevel(from.stafflevel());
  }
}

void Test_Staff::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test_Staff::CopyFrom(const Test_Staff& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test_Staff::IsInitialized() const {

  return true;
}

void Test_Staff::Swap(Test_Staff* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Test_Staff::InternalSwap(Test_Staff* other) {
  std::swap(staffid_, other->staffid_);
  staffname_.Swap(&other->staffname_);
  std::swap(stafflevel_, other->stafflevel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Test_Staff::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Test_Staff_descriptor_;
  metadata.reflection = Test_Staff_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Test::kNameFieldNumber;
const int Test::kIdFieldNumber;
const int Test::kPropertyvaluesFieldNumber;
const int Test::kStaffArrayFieldNumber;
#endif  // !_MSC_VER

Test::Test()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.Test)
}

void Test::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Test::Test(const Test& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.Test)
}

void Test::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

Test::~Test() {
  // @@protoc_insertion_point(destructor:google.protobuf.Test)
  SharedDtor();
}

void Test::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Test::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Test::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Test_descriptor_;
}

const Test& Test::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Test* Test::default_instance_ = NULL;

Test* Test::New(::google::protobuf::Arena* arena) const {
  Test* n = new Test;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Test::Clear() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  propertyvalues_.Clear();
  staffarray_.Clear();
}

bool Test::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.Test)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "google.protobuf.Test.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (tag == 16) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_propertyvalues;
        break;
      }

      // repeated string propertyvalues = 3;
      case 3: {
        if (tag == 26) {
         parse_propertyvalues:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_propertyvalues()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->propertyvalues(this->propertyvalues_size() - 1).data(),
            this->propertyvalues(this->propertyvalues_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "google.protobuf.Test.propertyvalues");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_propertyvalues;
        if (input->ExpectTag(34)) goto parse_StaffArray;
        break;
      }

      // repeated .google.protobuf.Test.Staff StaffArray = 4;
      case 4: {
        if (tag == 34) {
         parse_StaffArray:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_staffarray()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_StaffArray;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.Test)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.Test)
  return false;
#undef DO_
}

void Test::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.Test)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.Test.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // repeated string propertyvalues = 3;
  for (int i = 0; i < this->propertyvalues_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->propertyvalues(i).data(), this->propertyvalues(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "google.protobuf.Test.propertyvalues");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->propertyvalues(i), output);
  }

  // repeated .google.protobuf.Test.Staff StaffArray = 4;
  for (unsigned int i = 0, n = this->staffarray_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->staffarray(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.protobuf.Test)
}

::google::protobuf::uint8* Test::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.Test)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.Test.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // repeated string propertyvalues = 3;
  for (int i = 0; i < this->propertyvalues_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->propertyvalues(i).data(), this->propertyvalues(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.Test.propertyvalues");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->propertyvalues(i), target);
  }

  // repeated .google.protobuf.Test.Staff StaffArray = 4;
  for (unsigned int i = 0, n = this->staffarray_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->staffarray(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.Test)
  return target;
}

int Test::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // repeated string propertyvalues = 3;
  total_size += 1 * this->propertyvalues_size();
  for (int i = 0; i < this->propertyvalues_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->propertyvalues(i));
  }

  // repeated .google.protobuf.Test.Staff StaffArray = 4;
  total_size += 1 * this->staffarray_size();
  for (int i = 0; i < this->staffarray_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->staffarray(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Test::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Test* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Test*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Test::MergeFrom(const Test& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  propertyvalues_.MergeFrom(from.propertyvalues_);
  staffarray_.MergeFrom(from.staffarray_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Test::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test::CopyFrom(const Test& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test::IsInitialized() const {

  return true;
}

void Test::Swap(Test* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Test::InternalSwap(Test* other) {
  name_.Swap(&other->name_);
  std::swap(id_, other->id_);
  propertyvalues_.UnsafeArenaSwap(&other->propertyvalues_);
  staffarray_.UnsafeArenaSwap(&other->staffarray_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Test::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Test_descriptor_;
  metadata.reflection = Test_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Test_Staff

// optional int32 staffid = 1;
 void Test_Staff::clear_staffid() {
  staffid_ = 0;
}
 ::google::protobuf::int32 Test_Staff::staffid() const {
  // @@protoc_insertion_point(field_get:google.protobuf.Test.Staff.staffid)
  return staffid_;
}
 void Test_Staff::set_staffid(::google::protobuf::int32 value) {
  
  staffid_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.Test.Staff.staffid)
}

// optional string staffname = 2;
 void Test_Staff::clear_staffname() {
  staffname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Test_Staff::staffname() const {
  // @@protoc_insertion_point(field_get:google.protobuf.Test.Staff.staffname)
  return staffname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Test_Staff::set_staffname(const ::std::string& value) {
  
  staffname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.Test.Staff.staffname)
}
 void Test_Staff::set_staffname(const char* value) {
  
  staffname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.Test.Staff.staffname)
}
 void Test_Staff::set_staffname(const char* value, size_t size) {
  
  staffname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.Test.Staff.staffname)
}
 ::std::string* Test_Staff::mutable_staffname() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.Test.Staff.staffname)
  return staffname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Test_Staff::release_staffname() {
  
  return staffname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Test_Staff::set_allocated_staffname(::std::string* staffname) {
  if (staffname != NULL) {
    
  } else {
    
  }
  staffname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), staffname);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.Test.Staff.staffname)
}

// optional int32 stafflevel = 3;
 void Test_Staff::clear_stafflevel() {
  stafflevel_ = 0;
}
 ::google::protobuf::int32 Test_Staff::stafflevel() const {
  // @@protoc_insertion_point(field_get:google.protobuf.Test.Staff.stafflevel)
  return stafflevel_;
}
 void Test_Staff::set_stafflevel(::google::protobuf::int32 value) {
  
  stafflevel_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.Test.Staff.stafflevel)
}

// -------------------------------------------------------------------

// Test

// optional string name = 1;
 void Test::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Test::name() const {
  // @@protoc_insertion_point(field_get:google.protobuf.Test.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Test::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.Test.name)
}
 void Test::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.Test.name)
}
 void Test::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.Test.name)
}
 ::std::string* Test::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.protobuf.Test.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Test::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Test::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.Test.name)
}

// optional int32 id = 2;
 void Test::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Test::id() const {
  // @@protoc_insertion_point(field_get:google.protobuf.Test.id)
  return id_;
}
 void Test::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.Test.id)
}

// repeated string propertyvalues = 3;
 int Test::propertyvalues_size() const {
  return propertyvalues_.size();
}
 void Test::clear_propertyvalues() {
  propertyvalues_.Clear();
}
 const ::std::string& Test::propertyvalues(int index) const {
  // @@protoc_insertion_point(field_get:google.protobuf.Test.propertyvalues)
  return propertyvalues_.Get(index);
}
 ::std::string* Test::mutable_propertyvalues(int index) {
  // @@protoc_insertion_point(field_mutable:google.protobuf.Test.propertyvalues)
  return propertyvalues_.Mutable(index);
}
 void Test::set_propertyvalues(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.protobuf.Test.propertyvalues)
  propertyvalues_.Mutable(index)->assign(value);
}
 void Test::set_propertyvalues(int index, const char* value) {
  propertyvalues_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.protobuf.Test.propertyvalues)
}
 void Test::set_propertyvalues(int index, const char* value, size_t size) {
  propertyvalues_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.Test.propertyvalues)
}
 ::std::string* Test::add_propertyvalues() {
  return propertyvalues_.Add();
}
 void Test::add_propertyvalues(const ::std::string& value) {
  propertyvalues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.protobuf.Test.propertyvalues)
}
 void Test::add_propertyvalues(const char* value) {
  propertyvalues_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.protobuf.Test.propertyvalues)
}
 void Test::add_propertyvalues(const char* value, size_t size) {
  propertyvalues_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.protobuf.Test.propertyvalues)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Test::propertyvalues() const {
  // @@protoc_insertion_point(field_list:google.protobuf.Test.propertyvalues)
  return propertyvalues_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Test::mutable_propertyvalues() {
  // @@protoc_insertion_point(field_mutable_list:google.protobuf.Test.propertyvalues)
  return &propertyvalues_;
}

// repeated .google.protobuf.Test.Staff StaffArray = 4;
 int Test::staffarray_size() const {
  return staffarray_.size();
}
 void Test::clear_staffarray() {
  staffarray_.Clear();
}
 const ::google::protobuf::Test_Staff& Test::staffarray(int index) const {
  // @@protoc_insertion_point(field_get:google.protobuf.Test.StaffArray)
  return staffarray_.Get(index);
}
 ::google::protobuf::Test_Staff* Test::mutable_staffarray(int index) {
  // @@protoc_insertion_point(field_mutable:google.protobuf.Test.StaffArray)
  return staffarray_.Mutable(index);
}
 ::google::protobuf::Test_Staff* Test::add_staffarray() {
  // @@protoc_insertion_point(field_add:google.protobuf.Test.StaffArray)
  return staffarray_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Test_Staff >&
Test::staffarray() const {
  // @@protoc_insertion_point(field_list:google.protobuf.Test.StaffArray)
  return staffarray_;
}
 ::google::protobuf::RepeatedPtrField< ::google::protobuf::Test_Staff >*
Test::mutable_staffarray() {
  // @@protoc_insertion_point(field_mutable_list:google.protobuf.Test.StaffArray)
  return &staffarray_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
